"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var router_1 = require("@angular/router");
var category_1 = require("./category");
var content_list_component_1 = require("../content/content-list.component");
var category_service_1 = require("./category.service");
var auth_service_1 = require("../auth/auth.service");
var error_service_1 = require("../errors/error.service");
var CategoryComponent = (function () {
    function CategoryComponent(_categoryService, _fb, _authService, _errorService) {
        this._categoryService = _categoryService;
        this._fb = _fb;
        this._authService = _authService;
        this._errorService = _errorService;
    }
    CategoryComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.myForm = this._fb.group({
            category: ['', common_1.Validators.required]
        });
        this._categoryService.getCategory()
            .subscribe(function (categories) {
            _this.categories = categories;
            _this._categoryService.categories = categories;
        }, function (error) { return _this._errorService.handleError(error); });
    };
    CategoryComponent.prototype.onDelete = function (category) {
        var _this = this;
        this._categoryService.deleteCategory(category)
            .subscribe(function (data) { return console.log(data); }, function (error) { return _this._errorService.handleError(error); });
    };
    CategoryComponent.prototype.onSubmit = function () {
        var _this = this;
        var category = new category_1.Category(this.myForm.value.category, null);
        this._categoryService.addCategory(category)
            .subscribe(function (data) {
            console.log(data);
            _this._categoryService.categories.push(data);
        }, function (error) { return _this._errorService.handleError(error); });
    };
    CategoryComponent.prototype.isLoggedIn = function () {
        return this._authService.isLoggedIn();
    };
    CategoryComponent = __decorate([
        core_1.Component({
            selector: 'my-category',
            template: "\n\t\t<div class=\"row spacing\">\n      \t<nav class=\"col-md-6 col-md-offset-1\">              \n                <ul class=\"nav nav-tabs\">                   \n                    <li *ngFor=\"let category of categories\">\n                      <div class=\"container\">\n                        <button class=\"btn btn-danger btn-xs round\" (click)=\"onDelete(category)\" *ngIf=\"isLoggedIn()\">X</button>\n                      </div>\n                      <a [routerLink]=\"['./content', category.name]\">{{category.name}}</a>\n                    </li>\n                </ul>\n          </nav>\n          <div class=\"col-md-2\" *ngIf=\"isLoggedIn()\">\n            <span class=\"glyphicon glyphicon-arrow-left\"></span>\n          </div>\n        <div class=\"col-md-3\" *ngIf=\"isLoggedIn()\">\n          <div class=\"well\">\n          <form [ngFormModel]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                        <label for=\"category\">Add Category</label>\n                        <input [ngFormControl]=\"myForm.find('category')\" type=\"text\" id=\"category\" class=\"form-control\">\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!myForm.valid\">Submit</button>\n          </form>\n          </div>\n        </div>\n    </div>\n    <div class=\"row spacing\">\n      <section>\n        <router-outlet></router-outlet>\n      </section>\n    </div>\n    ",
            directives: [router_1.ROUTER_DIRECTIVES],
            styles: ["\n        .container {\n          padding-left: 0;\n          padding-right: 0;\n          text-align: right;\n        }\n\n        .col-md-8 {\n          padding-top: 30px;\n        }\n\n        li {\n          float: none;\n          display: inline-block;\n        }\n\n        li a {           \n            color: #000084;         \n        }\n\n        li a:hover {\n            background-color: #FFCC00;\n            color: #FF2400;        \n        }\n\n        .router-link-active {\n            background-color: #FFCC00;\n            color: white;\n        }\n\n        .btn-xs {\n            font-size: 10px;\n            line-height: 2;\n            width: 24px;           \n            text-align: center;\n            border-radius: 16px;\n        }\n    "]
        }),
        router_1.Routes([
            { path: '/content/:id', component: content_list_component_1.ContentListComponent }
        ]), 
        __metadata('design:paramtypes', [category_service_1.CategoryService, common_1.FormBuilder, auth_service_1.AuthService, error_service_1.ErrorService])
    ], CategoryComponent);
    return CategoryComponent;
}());
exports.CategoryComponent = CategoryComponent;

//# sourceMappingURL=data:application/json;base64,
