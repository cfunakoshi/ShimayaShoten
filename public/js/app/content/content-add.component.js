"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var router_1 = require("@angular/router");
var content_1 = require("./content");
var content_service_1 = require("./content.service");
var category_service_1 = require("../category/category.service");
var error_service_1 = require("../errors/error.service");
var ContentAddComponent = (function () {
    function ContentAddComponent(_contentService, _categoryService, _fb, _router, _errorService) {
        this._contentService = _contentService;
        this._categoryService = _categoryService;
        this._fb = _fb;
        this._router = _router;
        this._errorService = _errorService;
    }
    ContentAddComponent.prototype.ngOnInit = function () {
        this.myForm = this._fb.group({
            productName: ['', common_1.Validators.required],
            price: ['', common_1.Validators.required],
            category: ['', common_1.Validators.required],
            description: ['', common_1.Validators.required]
        });
    };
    ContentAddComponent.prototype.changeListener = function ($event) {
        filepicker.setKey('A9LlxuvEwTomiX36nRj4Iz');
        var url = document.getElementById("imgPlaceholder").src;
        if (url !== "http://localhost:3000/") {
            filepicker.remove(url, function () {
                console.log("Removed");
            });
        }
        var input = document.getElementById("store-input");
        filepicker.store(input, function (Blob) {
            var image = document.getElementById("imgPlaceholder");
            console.log("Store successful:", JSON.stringify(Blob));
            image.setAttribute('src', Blob.url);
        }, function (FPError) {
            //  console.log(FPError.toString()); - print errors to console
        }, function (progress) {
            var progressbar = document.getElementById("progressbar");
            progressbar.style.width = progress + '%';
            console.log("Loading: " + progress + "%");
        });
    };
    ContentAddComponent.prototype.onSubmit = function () {
        var _this = this;
        filepicker.setKey('A9LlxuvEwTomiX36nRj4Iz');
        var imageUrl = document.getElementById("imgPlaceholder").src;
        console.log(imageUrl);
        if (imageUrl == "http://localhost:3000/") {
            console.log("Choose a png to store to S3");
        }
        else {
            var image = document.getElementById("imgPlaceholder");
            image.setAttribute('src', ".");
            var content = new content_1.Content(this.myForm.value.productName, this.myForm.value.price, this.myForm.value.category, this.myForm.value.description, null, imageUrl);
            this._contentService.addContent(content)
                .subscribe(function (data) {
                console.log(data);
                _this._contentService.items.push(data);
                _this._router.navigateByUrl('/product');
            }, function (error) { return _this._errorService.handleError(error); });
        }
    };
    ContentAddComponent = __decorate([
        core_1.Component({
            selector: 'my-content-add',
            template: "\n\t\t<div class=\"jumbotron\">\n          <h2 style=\"text-align: center;\">Add New Product</h2>\n        <br>\n         <form [ngFormModel]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"productName\">Product Name</label>\n                        <input [ngFormControl]=\"myForm.find('productName')\" type=\"text\" id=\"productName\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"price\">Price</label>\n                        <input [ngFormControl]=\"myForm.find('price')\" type=\"text\" id=\"price\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"category\">Category</label>\n                        <input [ngFormControl]=\"myForm.find('category')\" type=\"text\" id=\"category\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"description\">Description</label>\n                        <input [ngFormControl]=\"myForm.find('description')\" type=\"text\" id=\"description\" class=\"form-control\">\n                    </div>\n                      <div class=\"row spacing\">\n                        <div class=\"col-md-4\">                        \n                          <label for=\"picture\">Picture</label>\n                          <input type=\"file\" id=\"store-input\" (change)=\"changeListener($event)\" />   \n                        </div>\n                        <div class=\"col-md-8\">\n                         <div class=\"progress\">\n                            <div class=\"progress-bar progress-bar-striped active\" role=\"progressbar\" id=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:0%\">\n                             </div>\n                          </div>\n                        <img src=\".\" alt=\"Preview\" id=\"imgPlaceholder\"/>\n                        </div>\n                      </div>\n\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!myForm.valid\">Submit</button>\n          </form>\n         </div>\n\n\t",
            styles: ["\n        .jumbotron {\n          \n        }\n\n        .list-group {\n            display: inline-block;\n            padding-left: 20px;\n        }\n\n        img {\n          height: 90px;\n          width: 110px;\n        }\n    "]
        }), 
        __metadata('design:paramtypes', [content_service_1.ContentService, category_service_1.CategoryService, common_1.FormBuilder, router_1.Router, error_service_1.ErrorService])
    ], ContentAddComponent);
    return ContentAddComponent;
}());
exports.ContentAddComponent = ContentAddComponent;

//# sourceMappingURL=data:application/json;base64,
