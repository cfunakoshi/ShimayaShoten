"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var content_1 = require("./content");
var content_service_1 = require("./content.service");
var category_service_1 = require("../category/category.service");
var error_service_1 = require("../errors/error.service");
var ContentAddComponent = (function () {
    function ContentAddComponent(_contentService, _categoryService, _fb, _errorService) {
        this._contentService = _contentService;
        this._categoryService = _categoryService;
        this._fb = _fb;
        this._errorService = _errorService;
    }
    ContentAddComponent.prototype.ngOnInit = function () {
        this.myForm = this._fb.group({
            productName: ['', common_1.Validators.required],
            price: ['', common_1.Validators.required],
            category: ['', common_1.Validators.required],
            description: ['', common_1.Validators.required]
        });
    };
    ContentAddComponent.prototype.fileChangeEvent = function (fileInput) {
        this.filesToUpload = fileInput.target.files;
    };
    ContentAddComponent.prototype.onSubmit = function () {
        var _this = this;
        this._contentService.makeFileRequest("http://localhost:3000/content/upload", [], this.filesToUpload).then(function (result) {
            console.log(result);
            var content = new content_1.Content(_this.myForm.value.productName, _this.myForm.value.price, _this.myForm.value.category, _this.myForm.value.description, null, result.filename);
            _this._contentService.addContent(content)
                .subscribe(function (data) {
                console.log(data);
                _this._contentService.items.push(data);
                alert("Product was added!");
            }, function (error) { return _this._errorService.handleError(error); });
        }, function (error) {
            console.error(error);
        });
    };
    ContentAddComponent = __decorate([
        core_1.Component({
            selector: 'my-content-add',
            template: "\n\t\t<div class=\"jumbotron\">\n          <h2 style=\"text-align: center;\">Add New Product</h2>\n        <br>\n         <form [ngFormModel]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"productName\">Product Name</label>\n                        <input [ngFormControl]=\"myForm.find('productName')\" type=\"text\" id=\"productName\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"price\">Price</label>\n                        <input [ngFormControl]=\"myForm.find('price')\" type=\"text\" id=\"price\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"category\">Category</label>\n                        <input [ngFormControl]=\"myForm.find('category')\" type=\"text\" id=\"category\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"description\">Description</label>\n                        <textarea [ngFormControl]=\"myForm.find('description')\" rows=\"3\" id=\"description\" class=\"form-control\"></textarea>\n                    </div>\n                      <div class=\"row spacing\">                       \n                          <label for=\"picture\">Picture</label>\n                          <input type=\"file\" id=\"store-input\" (change)=\"fileChangeEvent($event)\" />   \n                      </div>\n\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!myForm.valid\">Submit</button>\n          </form>\n         </div>\n\n\t",
            styles: ["\n        .jumbotron {\n          \n        }\n\n        .row {\n          padding-left: 16px;\n        }\n\n        img {\n          height: 90px;\n          width: 110px;\n        }\n    "]
        }), 
        __metadata('design:paramtypes', [content_service_1.ContentService, category_service_1.CategoryService, common_1.FormBuilder, error_service_1.ErrorService])
    ], ContentAddComponent);
    return ContentAddComponent;
}());
exports.ContentAddComponent = ContentAddComponent;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRlbnQvY29udGVudC1hZGQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxxQkFBZ0MsZUFBZSxDQUFDLENBQUE7QUFDaEQsdUJBQStELGlCQUFpQixDQUFDLENBQUE7QUFFakYsd0JBQXdCLFdBQVcsQ0FBQyxDQUFBO0FBRXBDLGdDQUErQixtQkFBbUIsQ0FBQyxDQUFBO0FBQ25ELGlDQUFnQyw4QkFBOEIsQ0FBQyxDQUFBO0FBQy9ELDhCQUE2Qix5QkFBeUIsQ0FBQyxDQUFBO0FBaUR2RDtJQUtHLDZCQUFvQixlQUErQixFQUFVLGdCQUFpQyxFQUFVLEdBQWUsRUFBVSxhQUEyQjtRQUF4SSxvQkFBZSxHQUFmLGVBQWUsQ0FBZ0I7UUFBVSxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWlCO1FBQVUsUUFBRyxHQUFILEdBQUcsQ0FBWTtRQUFVLGtCQUFhLEdBQWIsYUFBYSxDQUFjO0lBQUcsQ0FBQztJQUVoSyxzQ0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQztZQUN0QixXQUFXLEVBQUUsQ0FBQyxFQUFFLEVBQUUsbUJBQVUsQ0FBQyxRQUFRLENBQUM7WUFDdEMsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFLG1CQUFVLENBQUMsUUFBUSxDQUFDO1lBQ2hDLFFBQVEsRUFBRSxDQUFDLEVBQUUsRUFBRSxtQkFBVSxDQUFDLFFBQVEsQ0FBQztZQUNuQyxXQUFXLEVBQUUsQ0FBQyxFQUFFLEVBQUUsbUJBQVUsQ0FBQyxRQUFRLENBQUM7U0FDekMsQ0FBQyxDQUFDO0lBQ1IsQ0FBQztJQUVELDZDQUFlLEdBQWYsVUFBZ0IsU0FBYztRQUM1QixJQUFJLENBQUMsYUFBYSxHQUFpQixTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUM1RCxDQUFDO0lBRUgsc0NBQVEsR0FBUjtRQUFBLGlCQWlCRTtRQWhCRyxJQUFJLENBQUMsZUFBZSxDQUFDLGVBQWUsQ0FBQyxzQ0FBc0MsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLE1BQU07WUFDM0csT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUVwQixJQUFNLE9BQU8sR0FBVyxJQUFJLGlCQUFPLENBQUUsS0FBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLEtBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsS0FBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLElBQUksRUFBRSxNQUFNLENBQUMsUUFBUSxDQUFFLENBQUM7WUFDaEwsS0FBSSxDQUFDLGVBQWUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDO2lCQUNyQyxTQUFTLENBQ1IsVUFBQSxJQUFJO2dCQUNGLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ2xCLEtBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDdEMsS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUM7WUFDOUIsQ0FBQyxFQUNELFVBQUEsS0FBSyxJQUFJLE9BQUEsS0FBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEVBQXJDLENBQXFDLENBQy9DLENBQUM7UUFDSixDQUFDLEVBQUUsVUFBQyxLQUFLO1lBQ1QsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFyRkg7UUFBQyxnQkFBUyxDQUFDO1lBQ1YsUUFBUSxFQUFFLGdCQUFnQjtZQUMxQixRQUFRLEVBQUMscXNEQThCUjtZQUNELE1BQU0sRUFBRSxDQUFDLCtMQWFMLENBQUM7U0FDTCxDQUFDOzsyQkFBQTtJQXVDRiwwQkFBQztBQUFELENBdENBLEFBc0NDLElBQUE7QUF0Q1ksMkJBQW1CLHNCQXNDL0IsQ0FBQSIsImZpbGUiOiJjb250ZW50L2NvbnRlbnQtYWRkLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBPbkluaXR9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBGb3JtQnVpbGRlciwgQ29udHJvbEdyb3VwLCBWYWxpZGF0b3JzLCBDb250cm9sIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xuXG5pbXBvcnQgeyBDb250ZW50IH0gZnJvbSBcIi4vY29udGVudFwiO1xuaW1wb3J0IHsgQ2F0ZWdvcnkgfSBmcm9tIFwiLi4vY2F0ZWdvcnkvY2F0ZWdvcnlcIjtcbmltcG9ydCB7IENvbnRlbnRTZXJ2aWNlIH0gZnJvbSBcIi4vY29udGVudC5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBDYXRlZ29yeVNlcnZpY2UgfSBmcm9tIFwiLi4vY2F0ZWdvcnkvY2F0ZWdvcnkuc2VydmljZVwiO1xuaW1wb3J0IHsgRXJyb3JTZXJ2aWNlIH0gZnJvbSBcIi4uL2Vycm9ycy9lcnJvci5zZXJ2aWNlXCI7XG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdteS1jb250ZW50LWFkZCcsXG5cdHRlbXBsYXRlOmBcblx0XHQ8ZGl2IGNsYXNzPVwianVtYm90cm9uXCI+XG4gICAgICAgICAgPGgyIHN0eWxlPVwidGV4dC1hbGlnbjogY2VudGVyO1wiPkFkZCBOZXcgUHJvZHVjdDwvaDI+XG4gICAgICAgIDxicj5cbiAgICAgICAgIDxmb3JtIFtuZ0Zvcm1Nb2RlbF09XCJteUZvcm1cIiAobmdTdWJtaXQpPVwib25TdWJtaXQoKVwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInByb2R1Y3ROYW1lXCI+UHJvZHVjdCBOYW1lPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBbbmdGb3JtQ29udHJvbF09XCJteUZvcm0uZmluZCgncHJvZHVjdE5hbWUnKVwiIHR5cGU9XCJ0ZXh0XCIgaWQ9XCJwcm9kdWN0TmFtZVwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCI+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInByaWNlXCI+UHJpY2U8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IFtuZ0Zvcm1Db250cm9sXT1cIm15Rm9ybS5maW5kKCdwcmljZScpXCIgdHlwZT1cInRleHRcIiBpZD1cInByaWNlXCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiY2F0ZWdvcnlcIj5DYXRlZ29yeTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgW25nRm9ybUNvbnRyb2xdPVwibXlGb3JtLmZpbmQoJ2NhdGVnb3J5JylcIiB0eXBlPVwidGV4dFwiIGlkPVwiY2F0ZWdvcnlcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJkZXNjcmlwdGlvblwiPkRlc2NyaXB0aW9uPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBbbmdGb3JtQ29udHJvbF09XCJteUZvcm0uZmluZCgnZGVzY3JpcHRpb24nKVwiIHJvd3M9XCIzXCIgaWQ9XCJkZXNjcmlwdGlvblwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCI+PC90ZXh0YXJlYT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdyBzcGFjaW5nXCI+ICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInBpY3R1cmVcIj5QaWN0dXJlPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJmaWxlXCIgaWQ9XCJzdG9yZS1pbnB1dFwiIChjaGFuZ2UpPVwiZmlsZUNoYW5nZUV2ZW50KCRldmVudClcIiAvPiAgIFxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cInN1Ym1pdFwiIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5XCIgW2Rpc2FibGVkXT1cIiFteUZvcm0udmFsaWRcIj5TdWJtaXQ8L2J1dHRvbj5cbiAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICA8L2Rpdj5cblxuXHRgLCBcblx0c3R5bGVzOiBbYFxuICAgICAgICAuanVtYm90cm9uIHtcbiAgICAgICAgICBcbiAgICAgICAgfVxuXG4gICAgICAgIC5yb3cge1xuICAgICAgICAgIHBhZGRpbmctbGVmdDogMTZweDtcbiAgICAgICAgfVxuXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgaGVpZ2h0OiA5MHB4O1xuICAgICAgICAgIHdpZHRoOiAxMTBweDtcbiAgICAgICAgfVxuICAgIGBdXG59KVxuZXhwb3J0IGNsYXNzIENvbnRlbnRBZGRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXHRcblx0bXlGb3JtOiBDb250cm9sR3JvdXA7XG4gIGZpbGVzVG9VcGxvYWQ6IEZpbGVbXTtcblxuICBcdGNvbnN0cnVjdG9yKHByaXZhdGUgX2NvbnRlbnRTZXJ2aWNlOiBDb250ZW50U2VydmljZSwgcHJpdmF0ZSBfY2F0ZWdvcnlTZXJ2aWNlOiBDYXRlZ29yeVNlcnZpY2UsIHByaXZhdGUgX2ZiOkZvcm1CdWlsZGVyLCBwcml2YXRlIF9lcnJvclNlcnZpY2U6IEVycm9yU2VydmljZSkge31cblxuICBcdG5nT25Jbml0KCkge1xuICAgIFx0dGhpcy5teUZvcm0gPSB0aGlzLl9mYi5ncm91cCh7XG4gICAgICAgICAgICBwcm9kdWN0TmFtZTogWycnLCBWYWxpZGF0b3JzLnJlcXVpcmVkXSxcbiAgICAgICAgICAgIHByaWNlOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdLFxuICAgICAgICAgICAgY2F0ZWdvcnk6IFsnJywgVmFsaWRhdG9ycy5yZXF1aXJlZF0sXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogWycnLCBWYWxpZGF0b3JzLnJlcXVpcmVkXVxuICAgICAgICB9KTtcbiAgXHR9XG5cbiAgXHRmaWxlQ2hhbmdlRXZlbnQoZmlsZUlucHV0OiBhbnkpIHtcbiAgICBcdHRoaXMuZmlsZXNUb1VwbG9hZCA9IDxBcnJheTxGaWxlPj4gZmlsZUlucHV0LnRhcmdldC5maWxlcztcblx0ICB9XG5cblx0b25TdWJtaXQoKSB7XG4gICAgICB0aGlzLl9jb250ZW50U2VydmljZS5tYWtlRmlsZVJlcXVlc3QoXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvY29udGVudC91cGxvYWRcIiwgW10sIHRoaXMuZmlsZXNUb1VwbG9hZCkudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zdCBjb250ZW50OkNvbnRlbnQgPSBuZXcgQ29udGVudCggdGhpcy5teUZvcm0udmFsdWUucHJvZHVjdE5hbWUsIHRoaXMubXlGb3JtLnZhbHVlLnByaWNlLCB0aGlzLm15Rm9ybS52YWx1ZS5jYXRlZ29yeSwgdGhpcy5teUZvcm0udmFsdWUuZGVzY3JpcHRpb24sIG51bGwsIHJlc3VsdC5maWxlbmFtZSApO1xuICAgICAgICAgICAgdGhpcy5fY29udGVudFNlcnZpY2UuYWRkQ29udGVudChjb250ZW50KVxuICAgICAgICAgICAgICAuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgICAgICAgICAgICB0aGlzLl9jb250ZW50U2VydmljZS5pdGVtcy5wdXNoKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgYWxlcnQoXCJQcm9kdWN0IHdhcyBhZGRlZCFcIik7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvciA9PiB0aGlzLl9lcnJvclNlcnZpY2UuaGFuZGxlRXJyb3IoZXJyb3IpXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9LCAoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgfSk7XG4gIH1cbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
